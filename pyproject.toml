[tool.poetry]
name = "scrapers"
version = "0.1.0"
description = ""
authors = ["purple_emily <purple_emily@protonmail.com>"]
license = "GPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/purple-emily/knight-crawler-scrapers-dirty"
repository = "https://github.com/purple-emily/knight-crawler-scrapers-dirty"

packages = [{ include = "scrapers", from = "src" }]


[tool.poetry.dependencies]
aio-pika = "^9.4.0"
aiofiles = "^23.2.1"
aiolimiter = "^1.1.0"
arrow = "^1.3.0"
asyncpg = "^0.29.0"
httpx = "^0.26.0"
loguru = "^0.7.2"
lxml = "^5.1.0"
pydantic = "^2.6.1"
pydantic-settings = "^2.2.1"
python = "^3.12"
typer = { extras = ["all"], version = "^0.9.0" }


[tool.poetry.group.dev.dependencies]
codespell = "^2.2.6"
coverage = "^7.4.3"
docker = "^7.0.0"
pre-commit = "^3.6.2"
pyright = "^1.1.351"
pytest = "^8.0.1"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
ruff = "^0.2.2"


[tool.pyright]
ignore = ["tests"]
include = ["src/scrapers"]
reportMissingImports = true
reportUnusedFunction = true
reportUnusedImport = true
reportUnusedVariable = true
strict = ["src/scrapers"]
typeCheckingMode = "strict"

[tool.ruff]
fix = true
src = ["src", "tests", "docs"]

[tool.ruff.lint]
extend-select = [
    "I",   # isort
    "C90", # mccabe complexity
]

[tool.ruff.lint.isort]
known-first-party = ["scrapers", "tests"]
case-sensitive = true


[tool.coverage.run]
branch = true
data_file = ".cache/.coverage"
source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
addopts = """
--cov
--cov-report term-missing
--import-mode=importlib
--strict-markers
-r a
-v
"""
cache_dir = ".cache/pytest_cache"
filterwarnings = ["ignore::UserWarning", "ignore::DeprecationWarning"]
# markers = ["rabbitmq: mark tests related to RabbitMQ"]
testpaths = ["tests"]


[tool.codespell]
count = true
skip = "data/*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
